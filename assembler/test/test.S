#include "printx.hs"

.global __main

.p2align 3
.section .data.MyData
   M: .space 1<<2
   .global A
   A: .long 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16

.p2align 3
.section .bss.MyData1	// секция неинициализированных данных.
	.global B 
	B: .space 17<<2		// объявление массива из 16 32-разрядных слов
						// объявляется массив В из 16 32-разрядных слов
						// объявляется массив С из 16 32-разрядных слов
	.global C
	C: .space 16<<2		// объявление массива из 16 32-разрядных слов


.section .text.AAA
__main:
    ar0 = A;	
    ar1 = B;	
    gr1 = 16;         	// счётчик цикла (16 циклов для копирования 16-ти 32-bit слов)
    gr1--;            	// устанавливается флаг для первого вхождения в цикл
		
Loop:	
    // если условие выполнено, осуществляется отложенный переход на метку Loop
    if > delayed goto Loop with gr1--;
        gr2  = [ar0++];	// чтение из памяти  32-разрядного слова
        [ar1++] = gr2;	// запись в память 32-разрядного слова



    // копирование массивов данных с помощью векторного процессора
    ar0 = A;	
    ar1 = C;	
    // ar1++;
    // массив А подаётся на векторное АЛУ и попадает в afifo без изменений
    rep 8 data = [ar0++] with data;
	rep 8 [ar1++] = afifo;

    ar5 = A;
	PRINTF1("A addr =%X\n",ar5)
    ar5 = C;
	PRINTF1("C addr =%X\n",ar5)
    PRINTF_VEC(B,16)
    PRINTF_VEC(C,16)

    gr7 = 0;
    return;
